module(name = "memorandum", version = "1.0")

bazel_dep(name = "rules_oci", version = "1.4.3")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_cc12",
    tag = "latest",
    image = "gcr.io/distroless/cc-debian12",
    platforms = ["linux/amd64", "linux/arm64/v8"],
)
use_repo(oci, "distroless_cc12")

nginx = use_extension("@rules_oci//oci:extensions.bzl", "oci")
nginx.pull(
    name = "nginx_debian_slim",
    digest = "sha256:10d1f5b58f74683ad34eb29287e07dab1e90f10af243f151bb50aa5dbb4d62ee",
    image = "docker.io/library/nginx",
#    tag = "latest",
    platforms = ["linux/amd64", "linux/arm64/v8"],
)
use_repo(nginx, "nginx_debian_slim")

bazel_dep(name = "rules_pkg", version = "0.9.1")

bazel_dep(name = "aspect_rules_js", version = "1.34.1")

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
bazel_dep(name = "rules_nodejs", version = "6.0.2")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "20.7.0")
#################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    data = [ "//frontend:package.json" ],
    pnpm_lock = "//frontend:pnpm-lock.yaml",
    verify_node_modules_ignored = "//frontend:.bazelignore",
)

use_repo(npm, "npm")
bazel_dep(name = "aspect_bazel_lib", version = "2.0.2")