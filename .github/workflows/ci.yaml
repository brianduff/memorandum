name: CI

on:
  push:
  pull_request:

jobs:
  build-backend-bazel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install baselisk
        uses: bazelbuild/setup-bazelisk@v2

      - name: Mount bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel

      - name: Build backend with bazel
        run: |
          bazel build //backend:backend

      - name: Build docker image
        run: |
          bazel build //backend:backend_image_tar

      - name: Load docker image
        run: |
          docker load --input bazel-bin/backend/backend_image_tar/tarball.tar

      - name: Run docker image
        shell: bash
        run: |
          docker run -i -p 8080:8080 --log-driver=none -a stdout -a stderr dubh/memorandum_backend:v0.0.1 &
          sleep 5
          curl -s http://localhost:8080/statusz > /tmp/out
          echo "Response from server: $(</tmp/out)"
          test "$(</tmp/out)" = "OK"

  test-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup default nightly
          rustup component add clippy

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build and test backend
        working-directory: ./backend
        run: |
          cargo build
          cargo clippy --no-deps
          cargo test

  build-frontend-bazel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install baselisk
        uses: bazelbuild/setup-bazelisk@v2

      - name: Mount bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel

      - name: Build backend with bazel
        run: |
          bazel build //frontend/...

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and test frontend
        working-directory: ./frontend
        run: |
          npm install -g pnpm
          pnpm install
          pnpm run build
          pnpm run test